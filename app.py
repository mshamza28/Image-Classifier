# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LdxAeDxK605rpTarPMTdAyFoMNEm4r7t
"""

!pip install streamlit

import streamlit as st
from PIL import Image
import numpy as np
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.resnet50 import ResNet50, preprocess_input, decode_predictions
import matplotlib.pyplot as plt

# Load the pre-trained ResNet50 model
model = ResNet50(weights='imagenet')

def predict_and_show(img_data):
    # Load and preprocess the image
    img = Image.open(img_data)
    img = img.resize((224, 224), Image.NEAREST)
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    # Make predictions
    predictions = model.predict(x)

    # Decode predictions
    decoded_predictions = decode_predictions(predictions, top=1)[0]
    top_prediction = decoded_predictions[0]  # Get the top prediction
    predicted_class = top_prediction[1]  # Class name
    prediction_confidence = top_prediction[2]  # Confidence level

    return predicted_class, prediction_confidence

# Streamlit UI
st.title('Image Classification with ResNet50')
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image', use_column_width=True)
    st.write("")
    st.write("Classifying...")
    predicted_class, prediction_confidence = predict_and_show(uploaded_file)
    st.write(f'Prediction: {predicted_class}')
    st.write(f'Confidence: {prediction_confidence:.2f}%')